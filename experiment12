1.      Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.


test> use invoice;
switched to db invoice
invoice> db.customer.insertMany([{id:1,name:"john",email:"john123@gmail.com",phone:"99087654",city:"calicut"} ,{id:2,name:"samuel",email:"samuel123@gmail.com",phone:"99087334",city:"Tvm"} ,{id:3,name:"johny",email:"johny7123@gmail.com",phone:"764087654",city:"malapuram"}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67fe3030ae5b3dba9a544ca7'),
    '1': ObjectId('67fe3030ae5b3dba9a544ca8'),
    '2': ObjectId('67fe3030ae5b3dba9a544ca9')
  }
}
invoice> db.product.insertMany([{p_id:01,name:"munch",price:20} ,{p_id:02,name:"dark fantasy",price:30}, {p_id:03,name:"diary milk",price:80}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67fe30efae5b3dba9a544caa'),
    '1': ObjectId('67fe30efae5b3dba9a544cab'),
    '2': ObjectId('67fe30efae5b3dba9a544cac')
  }
}



2.      Write a MongoDB query to find all documents from the collection CUSTOMER


invoice> db.customer.find();
[
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca7'),
    id: 1,
    name: 'john',
    email: 'john123@gmail.com',
    phone: '99087654',
    city: 'calicut'
  },
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca8'),
    id: 2,
    name: 'samuel',
    email: 'samuel123@gmail.com',
    phone: '99087334',
    city: 'Tvm'
  },
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca9'),
    id: 3,
    name: 'johny',
    email: 'johny7123@gmail.com',
    phone: '764087654',
    city: 'malapuram'
  }
]


3.      Write a MongoDB query to update the city in the collection CUSTOMER.


invoice> db.customer.updateMany({city:"Tvm"},{$set:{city:"kozhikode"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
invoice> db.customer.find();
[
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca7'),
    id: 1,
    name: 'john',
    email: 'john123@gmail.com',
    phone: '99087654',
    city: 'calicut'
  },
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca8'),
    id: 2,
    name: 'samuel',
    email: 'samuel123@gmail.com',
    phone: '99087334',
    city: 'kozhikode'
  },
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca9'),
    id: 3,
    name: 'johny',
    email: 'johny7123@gmail.com',
    phone: '764087654',
    city: 'malapuram'
  }
]


4.      Write a MongoDB query to delete the first matched document whose city is “Calicut”.


invoice> db.customer.deleteOne({city:"calicut"});
{ acknowledged: true, deletedCount: 1 }
invoice> db.customer.find();
[
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca8'),
    id: 2,
    name: 'samuel',
    email: 'samuel123@gmail.com',
    phone: '99087334',
    city: 'kozhikode'
  },
  {
    _id: ObjectId('67fe3030ae5b3dba9a544ca9'),
    id: 3,
    name: 'johny',
    email: 'johny7123@gmail.com',
    phone: '764087654',
    city: 'malapuram'
  }
]

//VERIFIED
